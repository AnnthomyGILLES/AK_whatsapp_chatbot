services:
  flask:
    build: .
    container_name: chatbot
#    restart: unless-stopped
    env_file:
      - .env
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_HOSTNAME: mongodb
    volumes:
      - appdata:/app
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend
    ports:
      - "5000:50000"
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
#    command: mongod --auth
    command: sh -c 'mongod --auth && /docker-entrypoint-initdb.d/init-mongo.sh'
    env_file:
      - .mongodb_env
    ports:
      - "27017:27017"
    volumes:
      - mongodbdata:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - backend

  webserver:
#    build: nginx
    image: nginx:latest
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - flask
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  appdata:
    driver: local
  nginxdata:
    driver: local